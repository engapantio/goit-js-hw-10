{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nconst refs = {\n  dateTimePicker: document.querySelector('input#datetime-picker'),\n  dataStart: document.querySelector('button[data-start]'),\n  dataPoints: document.querySelectorAll('div.timer span.value'),\n  result: 0,\n  copy: 0,\n  intervalId: null,\n  timeoutId: null,\n};\n\nlet userSelectedDate;\n\nrefs.dataStart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  locale: {\n    firstDayOfWeek: 1,\n  },\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      window.alert('Please choose a date in the future');\n      refs.dataStart.disabled = true;\n    } else if (selectedDates[0] > new Date()) {\n      refs.dataStart.disabled = false;\n      userSelectedDate = new Date(selectedDates[0]);\n\n      // console.log(userSelectedDate.getTime());\n    }\n  },\n};\n\nconst calendar = flatpickr(refs.dateTimePicker, options);\n\nconst addLeadingZero = value => String(value).padStart(2, '0');\n\nconst timeCount = () => {\n  const today = new Date();\n  let msResult = userSelectedDate.getTime() - today.getTime();\n  const result = convertMs(msResult);\n  Array.from(refs.dataPoints).forEach(\n    dataPoint =>\n      (dataPoint.textContent = addLeadingZero(\n        result[dataPoint.nextElementSibling.textContent.toLowerCase()]\n      ))\n  );\n};\n\nfunction toggleInputsDisable() {\n  if (\n    refs.dataStart.disabled === true &&\n    refs.dateTimePicker.disabled === true\n  ) {\n    refs.dataStart.disabled = false;\n    refs.dateTimePicker.disabled = false;\n    return;\n  }\n  if (\n    refs.dataStart.disabled === false &&\n    refs.dateTimePicker.disabled === false\n  ) {\n    refs.dataStart.disabled = true;\n    refs.dateTimePicker.disabled = true;\n  }\n}\n\n// function setCountdown(value, idNumber) {\n//   if (value === 0) {\n//     console.log(idNumber);\n//     clearInterval(idNumber);\n//     toggleInputDisable();\n//   } else {\n//     updateTimeValues(value);\n//   }\n// }\n\nrefs.dataStart.addEventListener('click', () => {\n  toggleInputsDisable();\n  timeCount();\n  const today = new Date();\n  const todayMs = today.getTime();\n  const end = userSelectedDate.getTime();\n  let i = ((end - todayMs) / 1000).toFixed(0);\n  refs.intervalId = setInterval(function () {\n    console.log(--i);\n    if (i === 0) {\n      toggleInputsDisable();\n      clearInterval(refs.intervalId);\n    } else {\n      timeCount();\n    }\n  }, 1000);\n});\n\n//   refs.intervalId = setInterval(function () {\n//     console.log(--i);\n//     if (i === 0) {\n//       clearInterval(refs.intervalId);\n//     }\n//     console.log('post-interval');\n//   }, 1000);\n// });\n\n//refs.copy = refs.result;);\n\n// refs.timeoutId = setTimeout(() => {\n//   clearInterval(refs.intervalId);\n// }, refs.copy);\n// if (refs.result === 0) {\n//   clearInterval(refs.intervalId);\n// }\n\n/*\nВибір дати\n\n\n\nМетод onClose() з об'єкта параметрів викликається щоразу під час закриття елемента інтерфейсу, який створює flatpickr. Саме в ньому варто обробляти дату, обрану користувачем. Параметр selectedDates — це масив обраних дат, тому ми беремо перший елемент selectedDates[0].\n\n\n\nТобі ця обрана дата буде потрібна в коді і поза межами цього методу onClose(). Тому оголоси поза межами методу let змінну, наприклад, userSelectedDate, і після валідації її в методі onClose() на минуле/майбутнє запиши обрану дату в цю let змінну.\n\nЯкщо користувач вибрав дату в минулому, покажи window.alert() з текстом \"Please choose a date in the future\" і зроби кнопку «Start» не активною.\nЯкщо користувач вибрав валідну дату (в майбутньому), кнопка «Start» стає активною.\nКнопка «Start» повинна бути неактивною доти, доки користувач не вибрав дату в майбутньому. Зверни увагу, що при обранні валідної дати, не запуску таймера і обранні потім невалідної дати, кнопка після розблокування має знову стати неактивною.\nНатисканням на кнопку «Start» починається зворотний відлік часу до обраної дати з моменту натискання.\n\n\nВідлік часу\n\n\n\nНатисканням на кнопку «Start» скрипт повинен обчислювати раз на секунду, скільки часу залишилось до вказаної дати, і оновлювати інтерфейс таймера, показуючи чотири цифри: дні, години, хвилини і секунди у форматі xx:xx:xx:xx.\n\nКількість днів може складатися з більше, ніж двох цифр.\nТаймер повинен зупинятися, коли дійшов до кінцевої дати, тобто залишок часу дорівнює нулю 00:00:00:00.\n\n\nПісля запуску таймера натисканням кнопки Старт кнопка Старт і інпут стають неактивним, щоб користувач не міг обрати нову дату, поки йде відлік часу. Після зупинки таймера інпут стає активним, щоб користувач міг обрати наступну дату. Кнопка залишається не активною.\n\n\nДля підрахунку значень використовуй готову функцію convertMs, де ms — різниця між кінцевою і поточною датою в мілісекундах.\nФорматування часу\n\n\n\nФункція convertMs() повертає об'єкт з розрахованим часом, що залишився до кінцевої дати. Зверни увагу, що вона не форматує результат. Тобто якщо залишилося 4 хвилини або будь-якої іншої складової часу, то функція поверне 4, а не 04. В інтерфейсі таймера необхідно додавати 0, якщо в числі менше двох символів. Напиши функцію, наприклад addLeadingZero(value), яка використовує метод рядка padStart() і перед відмальовуванням інтерфейсу форматує значення.\n\n\n\nБібліотека повідомлень\n\n\n\nДля відображення повідомлень користувачеві, замість window.alert(), використовуй бібліотеку iziToast. Для того щоб підключити CSS код бібліотеки в проєкт, необхідно додати ще один імпорт, крім того, що описаний у документації.\n\nПри першому завантаженні сторінки кнопка Start не активна.\nПри кліку на інпут відкривається календар, де можна вибрати дату.\nПри обранні дати з минулого, кнопка Start стає неактивною і з’являється повідомлення з текстом \"Please choose a date in the future\".\nПри обранні дати з майбутнього кнопка Start стає активною.\nПри натисканні на кнопку Start вона стає неактивною, на сторінку виводиться час, що лишився до обраної дати у форматі xx:xx:xx:xx, і запускається зворотний відлік часу до обраної дати.\nКожну секунду оновлюється інтерфейс і показує оновлені дані часу, який залишився.\nТаймер зупиняється, коли доходить до кінцевої дати, тобто залишок часу дорівнює нулю і інтерфейс виглядає так 00:00:00:00.\nЧас в інтерфейсі відформатований і, якщо воно містить менше двох символів, на початку числа доданий 0\n*/\n"],"names":["convertMs","ms","days","hours","minutes","seconds","refs","userSelectedDate","options","selectedDates","flatpickr","addLeadingZero","value","timeCount","today","msResult","result","dataPoint","toggleInputsDisable","todayMs","i"],"mappings":"mIAKA,SAASA,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/B,MAAMM,EAAO,CACX,eAAgB,SAAS,cAAc,uBAAuB,EAC9D,UAAW,SAAS,cAAc,oBAAoB,EACtD,WAAY,SAAS,iBAAiB,sBAAsB,EAG5D,WAAY,IAEd,EAEA,IAAIC,EAEJD,EAAK,UAAU,SAAW,GAE1B,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,OAAQ,CACN,eAAgB,CACpB,EACE,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzB,OAAO,MAAM,oCAAoC,EACjDH,EAAK,UAAU,SAAW,IACjBG,EAAc,CAAC,EAAI,IAAI,OAChCH,EAAK,UAAU,SAAW,GAC1BC,EAAmB,IAAI,KAAKE,EAAc,CAAC,CAAC,EAIhD,CACF,EAEiBC,EAAUJ,EAAK,eAAgBE,CAAO,EAEvD,MAAMG,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAEvDC,EAAY,IAAM,CACtB,MAAMC,EAAQ,IAAI,KAClB,IAAIC,EAAWR,EAAiB,QAAO,EAAKO,EAAM,QAAO,EACzD,MAAME,EAAShB,EAAUe,CAAQ,EACjC,MAAM,KAAKT,EAAK,UAAU,EAAE,QAC1BW,GACGA,EAAU,YAAcN,EACvBK,EAAOC,EAAU,mBAAmB,YAAY,YAAW,CAAE,CACrE,CACA,CACA,EAEA,SAASC,GAAsB,CAC7B,GACEZ,EAAK,UAAU,WAAa,IAC5BA,EAAK,eAAe,WAAa,GACjC,CACAA,EAAK,UAAU,SAAW,GAC1BA,EAAK,eAAe,SAAW,GAC/B,MACF,CAEEA,EAAK,UAAU,WAAa,IAC5BA,EAAK,eAAe,WAAa,KAEjCA,EAAK,UAAU,SAAW,GAC1BA,EAAK,eAAe,SAAW,GAEnC,CAYAA,EAAK,UAAU,iBAAiB,QAAS,IAAM,CAC7CY,EAAmB,EACnBL,EAAS,EAET,MAAMM,EADQ,IAAI,KAAI,EACA,QAAO,EAE7B,IAAIC,IADQb,EAAiB,QAAO,EACpBY,GAAW,KAAM,QAAQ,CAAC,EAC1Cb,EAAK,WAAa,YAAY,UAAY,CACxC,QAAQ,IAAI,EAAEc,CAAC,EACXA,IAAM,GACRF,EAAmB,EACnB,cAAcZ,EAAK,UAAU,GAE7BO,EAAS,CAEb,EAAG,GAAI,CACT,CAAC"}