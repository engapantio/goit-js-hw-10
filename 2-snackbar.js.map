{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst formElement = document.querySelector('form.form');\nconst fieldSet = document.querySelector('form fieldset');\nlet delay = 0;\nlet isToBeFulfilled;\nconsole.log(formElement.elements.state);\n\nfieldSet.addEventListener('click', e => {\n  isToBeFulfilled = e.target.value === 'fulfilled' ? true : false;\n  console.log(isToBeFulfilled);\n});\n\nformElement.addEventListener('submit', e => {\n  e.preventDefault();\n  delay = Number.parseInt(formElement.elements.delay.value);\n  const promise = new Promise((resolve, reject) => {\n    console.log(delay);\n    setTimeout(() => {\n      if (isToBeFulfilled) {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  })\n    .then(value => {\n      //console.log(value);\n      iziToast.success({\n        message: `✅ Fulfilled promise in ${value}ms`,\n        position: 'topRight',\n        icon: 'none',\n      });\n    })\n    .catch(err => {\n      //  console.log(err);\n      iziToast.error({\n        message: `❌ Rejected promise in ${err}ms`,\n        position: 'topRight',\n      });\n    });\n});\n\n/*\nНапиши скрипт, який після сабміту форми створює проміс. В середині колбека цього промісу через вказану користувачем кількість мілісекунд проміс має виконуватися (при fulfilled) або відхилятися (при rejected), залежно від обраної опції в радіокнопках. Значенням промісу, яке передається як аргумент у методи resolve/reject, має бути значення затримки в мілісекундах.\n\nСтворений проміс треба опрацювати у відповідних для вдалого/невдалого виконання методах.\n\nЯкщо проміс виконується вдало, виводь у консоль наступний рядок, де delay — це значення затримки виклику промісу в мілісекундах.\n\n\n\n`✅ Fulfilled promise in ${delay}ms`\n\n\n\nЯкщо проміс буде відхилено, то виводь у консоль наступний рядок, де delay — це значення затримки промісу в мілісекундах.\n\n`❌ Rejected promise in ${delay}ms`\n\n\n\n\nНа що буде звертати увагу ментор при перевірці:\n\nПідключена бібліотека iziToast.\nПри обранні стану в радіокнопках і натисканні на кнопку Create notification з’являється повідомлення, відповідного до обраного стану стилю, із затримкою в кількість мілісекунд, переданих в інпут.\nПовідомлення, що виводиться, містить тип обраного стейту і кількість мілісекунд згідно з шаблоном в умові.\n\n*/\n"],"names":["formElement","fieldSet","delay","isToBeFulfilled","e","resolve","reject","value","iziToast","err"],"mappings":"mIAGA,MAAMA,EAAc,SAAS,cAAc,WAAW,EAChDC,EAAW,SAAS,cAAc,eAAe,EACvD,IAAIC,EAAQ,EACRC,EACJ,QAAQ,IAAIH,EAAY,SAAS,KAAK,EAEtCC,EAAS,iBAAiB,QAASG,GAAK,CACtCD,EAAkBC,EAAE,OAAO,QAAU,YACrC,QAAQ,IAAID,CAAe,CAC7B,CAAC,EAEDH,EAAY,iBAAiB,SAAUI,GAAK,CAC1CA,EAAE,eAAc,EAChBF,EAAQ,OAAO,SAASF,EAAY,SAAS,MAAM,KAAK,EACxC,IAAI,QAAQ,CAACK,EAASC,IAAW,CAC/C,QAAQ,IAAIJ,CAAK,EACjB,WAAW,IAAM,CACXC,EACFE,EAAQH,CAAK,EAEbI,EAAOJ,CAAK,CAEhB,EAAGA,CAAK,CACV,CAAC,EACE,KAAKK,GAAS,CAEbC,EAAS,QAAQ,CACf,QAAS,0BAA0BD,CAAK,KACxC,SAAU,WACV,KAAM,MACd,CAAO,CACH,CAAC,EACA,MAAME,GAAO,CAEZD,EAAS,MAAM,CACb,QAAS,yBAAyBC,CAAG,KACrC,SAAU,UAClB,CAAO,CACH,CAAC,CACL,CAAC"}